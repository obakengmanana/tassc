{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getTasks, deleteTask } from \"../services/taskService\";\nimport { logout as logoutService, getUser } from \"../services/authService\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      tasks: [],\n      showPopup: false,\n      showConfirmDialog: false,\n      taskToDelete: null,\n      user: null // Add user data\n    };\n  },\n  async created() {\n    try {\n      // Fetch tasks\n      const tasks = await getTasks();\n      this.tasks = tasks;\n\n      // Fetch user details\n      const user = await getUser(); // Adjust this based on your service\n      this.user = user;\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  },\n  methods: {\n    viewDetails(_id) {\n      this.$router.push(`/task/${_id}`);\n    },\n    editTask(_id) {\n      this.$router.push(`/edit-task/${_id}`);\n    },\n    confirmDelete(_id) {\n      this.taskToDelete = _id;\n      this.showConfirmDialog = true;\n    },\n    async deleteTask(_id) {\n      try {\n        await deleteTask(_id);\n        this.tasks = this.tasks.filter(task => task._id !== _id);\n        this.showConfirmDialog = false;\n        this.showPopup = true; // Show the popup on successful deletion\n      } catch (error) {\n        console.error(\"Error deleting task:\", error);\n      }\n    },\n    async logout() {\n      try {\n        await logoutService();\n        localStorage.removeItem(\"token\");\n        this.$router.push(\"/login\");\n      } catch (error) {\n        console.error(\"Error during logout:\", error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString(\"en-GB\");\n    },\n    goToTasks() {\n      this.$router.push(\"/tasks\"); // Redirect to the task list\n      this.showPopup = false; // Hide the popup after navigation\n    },\n    exportToPDF() {\n      const doc = new jsPDF();\n      doc.setFontSize(12);\n      const pageWidth = doc.internal.pageSize.getWidth();\n      const text = \"Tasks List\";\n      const textWidth = doc.getTextWidth(text);\n\n      // Calculate the x-coordinate for center alignment\n      const x = (pageWidth - textWidth) / 2;\n      doc.text(text, x, 10);\n      const columns = [\"Task Name\", \"Description\", \"Status\", \"Due Date\"];\n      const rows = this.tasks.map(task => [task.name, task.description, task.status, this.formatDate(task.dueDate)]);\n      doc.autoTable(columns, rows, {\n        startY: 20\n      });\n      doc.save(\"tasks-list.pdf\");\n    }\n  }\n};","map":{"version":3,"names":["getTasks","deleteTask","logout","logoutService","getUser","jsPDF","name","data","tasks","showPopup","showConfirmDialog","taskToDelete","user","created","error","console","methods","viewDetails","_id","$router","push","editTask","confirmDelete","filter","task","localStorage","removeItem","formatDate","date","Date","toLocaleDateString","goToTasks","exportToPDF","doc","setFontSize","pageWidth","internal","pageSize","getWidth","text","textWidth","getTextWidth","x","columns","rows","map","description","status","dueDate","autoTable","startY","save"],"sources":["D:\\Assessments\\tassc\\client-side\\src\\views\\TaskList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Navbar -->\r\n    <nav class=\"navbar\">\r\n      <div class=\"navbar-logo\">\r\n        <router-link to=\"/\">\r\n          <img src=\"@/assets/logo4.png\" alt=\"Logo\" class=\"logo\"/>\r\n        </router-link>\r\n      </div>\r\n    </nav>\r\n\r\n    <!-- Task List Section -->\r\n    <div class=\"task-list-container\">\r\n      <div class=\"header\">\r\n        <h1>Tasks</h1>\r\n        <div class=\"header-buttons\">\r\n          <router-link to=\"/profile\" class=\"btn-secondary\">Profile</router-link>\r\n          <button @click=\"logout\" class=\"btn-secondary\">Logout</button>\r\n          <router-link to=\"/add-task\" class=\"btn-primary\">Add Task</router-link>\r\n          <button @click=\"exportToPDF\" class=\"btn-primary\">Export to PDF</button>\r\n        </div>\r\n      </div>\r\n\r\n<!-- User Info Section -->\r\n<div class=\"user-info\" v-if=\"user\">\r\n  <div class=\"user-card\">\r\n    <div class=\"user-avatar\">\r\n      <!-- Placeholder for user avatar -->\r\n      <img src=\"@/assets/default-avatar.png\" alt=\"User Avatar\" class=\"avatar\" />\r\n    </div>\r\n    <div class=\"user-details\">\r\n      <p class=\"user-name\">Logged in as: <strong>{{ user.name }}</strong></p>\r\n      <p class=\"user-email\">Email: <strong>{{ user.email }}</strong></p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n      <table class=\"task-table\" v-if=\"tasks.length\">\r\n        <thead>\r\n          <tr>\r\n            <th>Task Name</th>\r\n            <th>Description</th>\r\n            <th>Status</th>\r\n            <th>Due Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in tasks\" :key=\"task._id\">\r\n            <td>{{ task.name }}</td>\r\n            <td>{{ task.description }}</td>\r\n            <td>{{ task.status }}</td>\r\n            <td>{{ formatDate(task.dueDate) }}</td>\r\n            <td>\r\n              <button @click=\"viewDetails(task._id)\" class=\"btn-action\">\r\n                View Details\r\n              </button>\r\n              <button @click=\"editTask(task._id)\" class=\"btn-action\">Edit</button>\r\n              <button @click=\"confirmDelete(task._id)\" class=\"btn-action\">\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-else>No tasks available</p>\r\n\r\n      <!-- Popup for success message -->\r\n      <div v-if=\"showPopup\" class=\"popup\">\r\n        <p>Task has been deleted successfully!</p>\r\n        <button @click=\"goToTasks\">Go Back to Task List</button>\r\n      </div>\r\n\r\n      <!-- Confirmation Dialog -->\r\n      <div v-if=\"showConfirmDialog\" class=\"confirm-dialog\">\r\n        <p>Are you sure you want to delete this task?</p>\r\n        <button @click=\"deleteTask(taskToDelete)\" class=\"btn-primary\">Yes</button>\r\n        <button @click=\"showConfirmDialog = false\" class=\"btn-secondary\">\r\n          No\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getTasks, deleteTask } from \"../services/taskService\";\r\nimport { logout as logoutService, getUser } from \"../services/authService\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nexport default {\r\n  name: \"TaskList\",\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      showPopup: false,\r\n      showConfirmDialog: false,\r\n      taskToDelete: null,\r\n      user: null, // Add user data\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Fetch tasks\r\n      const tasks = await getTasks();\r\n      this.tasks = tasks;\r\n\r\n      // Fetch user details\r\n      const user = await getUser(); // Adjust this based on your service\r\n      this.user = user;\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    viewDetails(_id) {\r\n      this.$router.push(`/task/${_id}`);\r\n    },\r\n    editTask(_id) {\r\n      this.$router.push(`/edit-task/${_id}`);\r\n    },\r\n    confirmDelete(_id) {\r\n      this.taskToDelete = _id;\r\n      this.showConfirmDialog = true;\r\n    },\r\n    async deleteTask(_id) {\r\n      try {\r\n        await deleteTask(_id);\r\n        this.tasks = this.tasks.filter((task) => task._id !== _id);\r\n        this.showConfirmDialog = false;\r\n        this.showPopup = true; // Show the popup on successful deletion\r\n      } catch (error) {\r\n        console.error(\"Error deleting task:\", error);\r\n      }\r\n    },\r\n    async logout() {\r\n      try {\r\n        await logoutService();\r\n        localStorage.removeItem(\"token\");\r\n        this.$router.push(\"/login\");\r\n      } catch (error) {\r\n        console.error(\"Error during logout:\", error);\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString(\"en-GB\");\r\n    },\r\n    goToTasks() {\r\n      this.$router.push(\"/tasks\"); // Redirect to the task list\r\n      this.showPopup = false; // Hide the popup after navigation\r\n    },\r\n    exportToPDF() {\r\n      const doc = new jsPDF();\r\n      doc.setFontSize(12);\r\n\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const text = \"Tasks List\";\r\n      const textWidth = doc.getTextWidth(text);\r\n\r\n      // Calculate the x-coordinate for center alignment\r\n      const x = (pageWidth - textWidth) / 2;\r\n\r\n      doc.text(text, x, 10);\r\n\r\n      const columns = [\"Task Name\", \"Description\", \"Status\", \"Due Date\"];\r\n      const rows = this.tasks.map((task) => [\r\n        task.name,\r\n        task.description,\r\n        task.status,\r\n        this.formatDate(task.dueDate),\r\n      ]);\r\n\r\n      doc.autoTable(columns, rows, { startY: 20 });\r\n      doc.save(\"tasks-list.pdf\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Navbar styling */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: white;\r\n  border: 2px solid rgba(0, 0, 0, 0.1); /* Initial border */\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Fading border effect */\r\n}\r\n\r\n.navbar-logo img {\r\n  width: 100px; /* Adjust the logo size */\r\n  height: auto;\r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n}\r\n\r\n/* User Info Section styles */\r\n.user-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-card {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f9f9f9; /* Light background for contrast */\r\n  border: 1px solid #eaeaea; /* Subtle border */\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.user-avatar {\r\n  margin-right: 15px; /* Space between avatar and text */\r\n}\r\n\r\n.avatar {\r\n  width: 50px; /* Set a width for the avatar */\r\n  height: 50px; /* Set a height for the avatar */\r\n  border-radius: 50%; /* Make it circular */\r\n  object-fit: cover; /* Ensure the image covers the area */\r\n}\r\n\r\n.user-details {\r\n  flex-grow: 1; /* Take up remaining space */\r\n}\r\n\r\n.user-name,\r\n.user-email {\r\n  margin: 0; /* Reset default margins */\r\n  font-size: 1em; /* Set a standard font size */\r\n}\r\n\r\n.user-name strong,\r\n.user-email strong {\r\n  color: #333; /* Darker color for the strong text */\r\n}\r\n\r\n/* Task List styling */\r\n.task-list-container {\r\n  margin: 50px 50px;\r\n  padding: 20px;\r\n  border: 1px solid #eaeaea;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.task-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.task-table th,\r\n.task-table td {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eaeaea;\r\n  text-align: left;\r\n}\r\n\r\n.task-table th {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.btn-primary,\r\n.btn-secondary,\r\n.btn-action {\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #000;\r\n  color: #fff;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #f1f1f1;\r\n  color: #000;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n.btn-action {\r\n  margin: 0 5px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.btn-action:hover {\r\n  background-color: #333;\r\n}\r\n\r\n/* Popup styles */\r\n.popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  text-align: center;\r\n}\r\n\r\n.popup p {\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n\r\n.popup button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.popup button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Confirmation dialog styles */\r\n.confirm-dialog {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  text-align: center;\r\n}\r\n\r\n.confirm-dialog p {\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
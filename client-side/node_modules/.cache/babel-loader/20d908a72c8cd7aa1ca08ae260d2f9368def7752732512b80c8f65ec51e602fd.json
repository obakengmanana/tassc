{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getTask, updateTask } from \"../services/taskService\";\nexport default {\n  name: \"EditTask\",\n  data() {\n    return {\n      task: {\n        name: \"\",\n        description: \"\",\n        status: \"\",\n        dueDate: \"\"\n      },\n      showPopup: false // Control the display of the popup\n    };\n  },\n  async created() {\n    try {\n      const taskId = this.$route.params.id;\n      const task = await getTask(taskId);\n      this.task = task;\n    } catch (error) {\n      console.error(\"Error fetching task:\", error);\n    }\n  },\n  methods: {\n    async handleEdit() {\n      try {\n        await updateTask(this.task._id, this.task);\n        this.showPopup = true; // Show the popup on successful update\n      } catch (error) {\n        console.error(\"Error updating task:\", error);\n      }\n    },\n    goToTasks() {\n      this.$router.push(\"/tasks\"); // Redirect to the task list\n      this.showPopup = false; // Hide the popup after navigation\n    }\n  }\n};","map":{"version":3,"names":["getTask","updateTask","name","data","task","description","status","dueDate","showPopup","created","taskId","$route","params","id","error","console","methods","handleEdit","_id","goToTasks","$router","push"],"sources":["D:\\Assessments\\tassc\\client-side\\src\\views\\EditTask.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Navbar -->\r\n    <nav class=\"navbar\">\r\n      <div class=\"nav-logo\">\r\n        <a href=\"/\">Task Manager</a>\r\n      </div>\r\n      <ul class=\"nav-links\">\r\n        <li><router-link to=\"/\">Home</router-link></li>\r\n        <li><router-link to=\"/tasks\">Tasks</router-link></li>\r\n        <li><router-link to=\"/about\">About</router-link></li>\r\n      </ul>\r\n    </nav>\r\n\r\n    <!-- Edit Task Form -->\r\n    <div class=\"edit-task-container\">\r\n      <h1>Edit Task</h1>\r\n      <form @submit.prevent=\"handleEdit\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Task Name</label>\r\n          <input\r\n            v-model=\"task.name\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Task Name\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description</label>\r\n          <textarea\r\n            v-model=\"task.description\"\r\n            id=\"description\"\r\n            placeholder=\"Description\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"status\">Status</label>\r\n          <select v-model=\"task.status\" id=\"status\" required>\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"In Progress\">In Progress</option>\r\n            <option value=\"Completed\">Completed</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"dueDate\">Due Date</label>\r\n          <input v-model=\"task.dueDate\" type=\"date\" id=\"dueDate\" required />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn-primary\">Save Changes</button>\r\n      </form>\r\n      <div class=\"back-to-tasks\">\r\n        <button @click=\"goToTasks\" class=\"btn-secondary\">Back to Tasks</button>\r\n      </div>\r\n\r\n      <!-- Popup for success message -->\r\n      <div v-if=\"showPopup\" class=\"popup\">\r\n        <p>Task has been updated successfully!</p>\r\n        <button @click=\"goToTasks\">Go Back to Task List</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getTask, updateTask } from \"../services/taskService\";\r\n\r\nexport default {\r\n  name: \"EditTask\",\r\n  data() {\r\n    return {\r\n      task: {\r\n        name: \"\",\r\n        description: \"\",\r\n        status: \"\",\r\n        dueDate: \"\",\r\n      },\r\n      showPopup: false, // Control the display of the popup\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const taskId = this.$route.params.id;\r\n      const task = await getTask(taskId);\r\n      this.task = task;\r\n    } catch (error) {\r\n      console.error(\"Error fetching task:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    async handleEdit() {\r\n      try {\r\n        await updateTask(this.task._id, this.task);\r\n        this.showPopup = true; // Show the popup on successful update\r\n      } catch (error) {\r\n        console.error(\"Error updating task:\", error);\r\n      }\r\n    },\r\n    goToTasks() {\r\n      this.$router.push(\"/tasks\"); // Redirect to the task list\r\n      this.showPopup = false; // Hide the popup after navigation\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Navbar styles */\r\n.navbar {\r\n  background-color: #333;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.navbar .nav-logo a {\r\n  color: #fff;\r\n  font-size: 20px;\r\n  text-decoration: none;\r\n}\r\n\r\n.navbar .nav-links {\r\n  list-style-type: none;\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.navbar .nav-links li {\r\n  display: inline;\r\n}\r\n\r\n.navbar .nav-links a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n\r\n.navbar .nav-links a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Edit Task styles */\r\n.edit-task-container {\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #eaeaea;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.edit-task-container h1 {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.edit-task-container .form-group {\r\n  margin-bottom: 15px;\r\n  text-align: left;\r\n}\r\n\r\n.edit-task-container label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.edit-task-container input,\r\n.edit-task-container textarea,\r\n.edit-task-container select {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #eaeaea;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.edit-task-container textarea {\r\n  resize: vertical;\r\n}\r\n\r\n.btn-primary,\r\n.btn-secondary {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #000;\r\n  color: #fff;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #333;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #f1f1f1;\r\n  color: #000;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n.back-to-tasks {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Popup styles */\r\n.popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  text-align: center;\r\n}\r\n\r\n.popup p {\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n\r\n.popup button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.popup button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";AAiEA,SAASA,OAAO,EAAEC,UAAS,QAAS,yBAAyB;AAE7D,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJF,IAAI,EAAE,EAAE;QACRG,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE;MACX,CAAC;MACDC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACpC,MAAMT,IAAG,GAAI,MAAMJ,OAAO,CAACU,MAAM,CAAC;MAClC,IAAI,CAACN,IAAG,GAAIA,IAAI;IAClB,EAAE,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMhB,UAAU,CAAC,IAAI,CAACG,IAAI,CAACc,GAAG,EAAE,IAAI,CAACd,IAAI,CAAC;QAC1C,IAAI,CAACI,SAAQ,GAAI,IAAI,EAAE;MACzB,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDK,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC7B,IAAI,CAACb,SAAQ,GAAI,KAAK,EAAE;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
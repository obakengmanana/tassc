{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Home from '../views/Home.vue';\nimport TaskList from '../views/TaskList.vue';\nimport TaskDetails from '../views/TaskDetails.vue';\nimport UserProfile from '../views/UserProfile.vue';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/tasks',\n  name: 'TaskList',\n  component: TaskList\n}, {\n  path: '/tasks/:id',\n  name: 'TaskDetails',\n  component: TaskDetails\n}, {\n  path: '/profile',\n  name: 'UserProfile',\n  component: UserProfile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      next('/login');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Home","TaskList","TaskDetails","UserProfile","Login","Register","use","routes","path","name","component","meta","requiresAuth","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record"],"sources":["D:/Assessments/tassc/client-side/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport Home from '../views/Home.vue';\r\nimport TaskList from '../views/TaskList.vue';\r\nimport TaskDetails from '../views/TaskDetails.vue';\r\nimport UserProfile from '../views/UserProfile.vue';\r\nimport Login from '../views/Login.vue';\r\nimport Register from '../views/Register.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  { path: '/', name: 'Home', component: Home },\r\n  { path: '/tasks', name: 'TaskList', component: TaskList },\r\n  { path: '/tasks/:id', name: 'TaskDetails', component: TaskDetails },\r\n  { path: '/profile', name: 'UserProfile', component: UserProfile, meta: { requiresAuth: true } },\r\n  { path: '/login', name: 'Login', component: Login },\r\n  { path: '/register', name: 'Register', component: Register },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!token) {\r\n      next('/login');\r\n    } else {\r\n      next();\r\n    }\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAE5CP,GAAG,CAACQ,GAAG,CAACP,SAAS,CAAC;AAElB,MAAMQ,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEV;AAAK,CAAC,EAC5C;EAAEQ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAET;AAAS,CAAC,EACzD;EAAEO,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAER;AAAY,CAAC,EACnE;EAAEM,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEP,WAAW;EAAEQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC/F;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEN;AAAM,CAAC,EACnD;EAAEI,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL;AAAS,CAAC,CAC7D;AAED,MAAMQ,MAAM,GAAG,IAAId,SAAS,CAAC;EAC3Be,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BX;AACF,CAAC,CAAC;AAEFM,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACjB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACW,KAAK,EAAE;MACVD,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}